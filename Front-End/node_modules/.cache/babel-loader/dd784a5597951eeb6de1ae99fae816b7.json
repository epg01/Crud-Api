{"ast":null,"code":"var _jsxFileName = \"D:\\\\programas react\\\\hiringsdoublevpartners\\\\Emmanuel\\\\src\\\\components\\\\SongSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SongDetail from \"./SongDetail\";\nimport SongForm from \"./SongForm\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helper/helpHttp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongSearch = () => {\n  _s();\n\n  const [search, setSearch] = useState(null); //const [lyric, setLyric] = useState(null);\n\n  const [bio, setBio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (search === null) return;\n\n    const fetchData = async () => {\n      const {\n        artist\n      } = search;\n      let artistUrl = `https://theaudiodb.com/api/v1/json/1/search.php?s=${artist}`; //  let songUrl = `https://api.lyrics.ovh/v1/${artist}/${song}`;\n\n      console.log(artistUrl);\n      setLoading(true);\n      const [artistRes] = await Promise.all([helpHttp().get(artistUrl) //helpHttp().get(songUrl),\n      ]); //console.log(artistRes, songRes);\n\n      setBio(artistRes); //setLyric(songRes);\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [search]);\n\n  const handleSearch = data => {\n    //console.log(data);\n    setSearch(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Song search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"grid-1-3\",\n      children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SongForm, {\n        handleSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), search && !loading && /*#__PURE__*/_jsxDEV(SongDetail, {\n        search: search,\n        bio: bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SongSearch, \"CPupoUYt+YkJwn4Zb11dsbGDEJM=\");\n\n_c = SongSearch;\nexport default SongSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongSearch\");","map":{"version":3,"sources":["D:/programas react/hiringsdoublevpartners/Emmanuel/src/components/SongSearch.js"],"names":["React","useState","useEffect","SongDetail","SongForm","Loader","helpHttp","SongSearch","search","setSearch","bio","setBio","loading","setLoading","fetchData","artist","artistUrl","console","log","artistRes","Promise","all","get","handleSearch","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC,CADuB,CAEvB;;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,MAAM,KAAK,IAAf,EAAqB;;AAErB,UAAMM,SAAS,GAAG,YAAY;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAaP,MAAnB;AACA,UAAIQ,SAAS,GAAI,qDAAoDD,MAAO,EAA5E,CAF4B,CAG5B;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEAH,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAM,CAACM,SAAD,IAAc,MAAMC,OAAO,CAACC,GAAR,CAAY,CACpCf,QAAQ,GAAGgB,GAAX,CAAeN,SAAf,CADoC,CAEpC;AAFoC,OAAZ,CAA1B,CAR4B,CAa5B;;AAEAL,MAAAA,MAAM,CAACQ,SAAD,CAAN,CAf4B,CAgB5B;;AAEAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAnBD;;AAoBAC,IAAAA,SAAS;AACV,GAxBQ,EAwBN,CAACN,MAAD,CAxBM,CAAT;;AA0BA,QAAMe,YAAY,GAAIC,IAAD,IAAU;AAC7B;AACAf,IAAAA,SAAS,CAACe,IAAD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA,iBACGZ,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADd,eAEE,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEW;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGf,MAAM,IAAI,CAACI,OAAX,iBAAsB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEJ,MAApB;AAA4B,QAAA,GAAG,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA/CD;;GAAMH,U;;KAAAA,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SongDetail from \"./SongDetail\";\r\nimport SongForm from \"./SongForm\";\r\nimport Loader from \"./Loader\";\r\nimport { helpHttp } from \"../helper/helpHttp\";\r\n\r\nconst SongSearch = () => {\r\n  const [search, setSearch] = useState(null);\r\n  //const [lyric, setLyric] = useState(null);\r\n  const [bio, setBio] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (search === null) return;\r\n\r\n    const fetchData = async () => {\r\n      const { artist } = search;\r\n      let artistUrl = `https://theaudiodb.com/api/v1/json/1/search.php?s=${artist}`;\r\n      //  let songUrl = `https://api.lyrics.ovh/v1/${artist}/${song}`;\r\n      console.log(artistUrl);\r\n\r\n      setLoading(true);\r\n\r\n      const [artistRes] = await Promise.all([\r\n        helpHttp().get(artistUrl),\r\n        //helpHttp().get(songUrl),\r\n      ]);\r\n\r\n      //console.log(artistRes, songRes);\r\n\r\n      setBio(artistRes);\r\n      //setLyric(songRes);\r\n\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [search]);\r\n\r\n  const handleSearch = (data) => {\r\n    //console.log(data);\r\n    setSearch(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Song search</h2>\r\n      <article className=\"grid-1-3\">\r\n        {loading && <Loader />}\r\n        <SongForm handleSearch={handleSearch} />\r\n        {search && !loading && <SongDetail search={search} bio={bio} />}\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongSearch;\r\n"]},"metadata":{},"sourceType":"module"}