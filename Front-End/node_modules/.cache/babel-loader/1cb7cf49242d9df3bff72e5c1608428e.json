{"ast":null,"code":"var _jsxFileName = \"D:\\\\programas react\\\\hiringsdoublevpartners\\\\Emmanuel\\\\src\\\\components\\\\CrudApi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { helpHttp } from \"../helper/helpHttp\";\nimport CrudForm from \"./CrudForm\";\nimport CrudTable from \"./CrudTable\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CrudApi = () => {\n  _s();\n\n  const [db, setDb] = useState(null);\n  const [dataToEdit, setDataToEdit] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  let api = helpHttp();\n  let url = \"http://localhost:8000/santos\"; //mi enpoint\n  //se ejecuta la primera vez unicamente\n\n  useEffect(() => {\n    setLoading(true);\n    helpHttp().get(url).then(res => {\n      console.log(res);\n\n      if (!res.err) {\n        setDb(res);\n        console.log(res);\n        setError(null);\n      } else {\n        setDb(null);\n        setError(res);\n      }\n\n      setLoading(false);\n    });\n  }, [url]);\n\n  const createData = data => {\n    data.id = Date.now(); //console.log(data);\n\n    let options = {\n      body: data,\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    api.post(url, options).then(res => {\n      //console.log(res);\n      if (!res.err) {\n        console.log(\"desde el post\");\n        setDb([...db, res]);\n      } else {\n        setError(res);\n      }\n    });\n  };\n\n  const updateData = data => {\n    let endPoint = `${url}/${data.id}`; //console.log(endPoint);\n\n    let options = {\n      body: data,\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    api.put(endPoint, options).then(res => {\n      console.log(res);\n\n      if (!res.err) {\n        let newData = db.map(el => el.id === data.id ? data : el);\n        setDb(newData);\n        console.log(\"desde el put\");\n      } else {\n        setError(res);\n      }\n    }); //setDb(newData);\n  };\n\n  const deleteData = id => {\n    let isDelete = window.confirm(`estas seGuro de su eliminaciÃ³n '${id}'?`);\n\n    if (isDelete) {\n      let endPoint = `${url}/${id}`;\n      console.log(endPoint);\n      let options = {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      };\n      api.del(endPoint, options).then(res => {\n        if (!res.err) {\n          let newData = db.filter(el => el.id !== id);\n          setDb(newData);\n        } else {\n          setError(res);\n        }\n      });\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(CrudForm, {\n        createData: createData,\n        updateData: updateData,\n        dataToEdit: dataToEdit,\n        setDataToEdit: setDataToEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        msg: `Error ${error.status}: ${error.statusText}`,\n        bgColor: \"#dc3545\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), db && /*#__PURE__*/_jsxDEV(CrudTable, {\n        data: db,\n        setDataToEdit: setDataToEdit,\n        deleteData: deleteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CrudApi, \"DyX+YwxBxG9WDWSVG/eD4NMTMpI=\");\n\n_c = CrudApi;\nexport default CrudApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudApi\");","map":{"version":3,"sources":["D:/programas react/hiringsdoublevpartners/Emmanuel/src/components/CrudApi.js"],"names":["React","useState","useEffect","helpHttp","CrudForm","CrudTable","Loader","Message","CrudApi","db","setDb","dataToEdit","setDataToEdit","error","setError","loading","setLoading","api","url","get","then","res","console","log","err","createData","data","id","Date","now","options","body","headers","post","updateData","endPoint","put","newData","map","el","deleteData","isDelete","window","confirm","del","filter","status","statusText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { helpHttp } from \"../helper/helpHttp\";\r\n\r\nimport CrudForm from \"./CrudForm\";\r\nimport CrudTable from \"./CrudTable\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\n\r\nconst CrudApi = () => {\r\n  const [db, setDb] = useState(null);\r\n  const [dataToEdit, setDataToEdit] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let api = helpHttp();\r\n  let url = \"http://localhost:8000/santos\"; //mi enpoint\r\n\r\n  //se ejecuta la primera vez unicamente\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    helpHttp()\r\n      .get(url)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (!res.err) {\r\n          setDb(res);\r\n          console.log(res);\r\n\r\n          setError(null);\r\n        } else {\r\n          setDb(null);\r\n          setError(res);\r\n        }\r\n        setLoading(false);\r\n      });\r\n  }, [url]);\r\n\r\n  const createData = (data) => {\r\n    data.id = Date.now();\r\n    //console.log(data);\r\n    let options = {\r\n      body: data,\r\n      headers: { \"content-type\": \"application/json\" },\r\n    };\r\n    api.post(url, options).then((res) => {\r\n      //console.log(res);\r\n      if (!res.err) {\r\n        console.log(\"desde el post\");\r\n        setDb([...db, res]);\r\n      } else {\r\n        setError(res);\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateData = (data) => {\r\n    let endPoint = `${url}/${data.id}`;\r\n\r\n    //console.log(endPoint);\r\n    let options = {\r\n      body: data,\r\n      headers: { \"content-type\": \"application/json\" },\r\n    };\r\n    api.put(endPoint, options).then((res) => {\r\n      console.log(res);\r\n      if (!res.err) {\r\n        let newData = db.map((el) => (el.id === data.id ? data : el));\r\n        setDb(newData);\r\n        console.log(\"desde el put\");\r\n      } else {\r\n        setError(res);\r\n      }\r\n    });\r\n    //setDb(newData);\r\n  };\r\n\r\n  const deleteData = (id) => {\r\n    let isDelete = window.confirm(`estas seGuro de su eliminaciÃ³n '${id}'?`);\r\n\r\n    if (isDelete) {\r\n      let endPoint = `${url}/${id}`;\r\n      console.log(endPoint);\r\n      let options = {\r\n        headers: { \"content-type\": \"application/json\" },\r\n      };\r\n\r\n      api.del(endPoint, options).then((res) => {\r\n        if (!res.err) {\r\n          let newData = db.filter((el) => el.id !== id);\r\n          setDb(newData);\r\n        } else {\r\n          setError(res);\r\n        }\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <article>\r\n        <CrudForm\r\n          createData={createData}\r\n          updateData={updateData}\r\n          dataToEdit={dataToEdit}\r\n          setDataToEdit={setDataToEdit}\r\n        />\r\n        {loading && <Loader />}\r\n        {error && (\r\n          <Message\r\n            msg={`Error ${error.status}: ${error.statusText}`}\r\n            bgColor=\"#dc3545\"\r\n          />\r\n        )}\r\n        {db && (\r\n          <CrudTable\r\n            data={db}\r\n            setDataToEdit={setDataToEdit}\r\n            deleteData={deleteData}\r\n          />\r\n        )}\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrudApi;\r\n"]},"metadata":{},"sourceType":"module"}